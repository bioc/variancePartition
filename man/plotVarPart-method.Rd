% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/variancePartition.R
\docType{methods}
\name{plotVarPart}
\alias{plotVarPart}
\alias{plotVarPart,data.frame-method}
\alias{plotVarPart,matrix-method}
\alias{plotVarPart,varPartResults-method}
\title{Violin plot of variance fractions}
\usage{
plotVarPart(obj, col = ggColorHue(ncol(obj)), label.angle = 20,
  ylim = c(0, 100), main = "", ...)

\S4method{plotVarPart}{matrix}(obj, col = ggColorHue(ncol(obj)),
  label.angle = 20, ylim = c(0, 100), main = "", ...)

\S4method{plotVarPart}{data.frame}(obj, col = ggColorHue(ncol(obj)),
  label.angle = 20, ylim = c(0, 100), main = "", ...)

\S4method{plotVarPart}{varPartResults}(obj, col = ggColorHue(ncol(obj)),
  label.angle = 20, ylim = c(0, 100), main = "", ...)
}
\arguments{
\item{obj}{varParFrac object returned by fitExtractVarPart or extractVarPart}

\item{col}{vector of colors}

\item{label.angle}{angle of labels on x-axis}

\item{ylim}{limits of y-axis}

\item{main}{title of plot}

\item{...}{additional arguments}
}
\value{
Makes violin plots of variance components model.  This function uses the graphics interface from ggplot2.  Warnings produced by this function usually ggplot2 warning that the window is too small.
}
\description{
Violin plot of variance fraction for each gene and each variable
}
\examples{

# load library
# library(variancePartition)

# optional step to run analysis in parallel on multicore machines
# Here, we used 4 threads
library(doParallel)
cl <- makeCluster(4)
registerDoParallel(cl)
# or by using the doSNOW package

# load simulated data:
# geneExpr: matrix of gene expression values
# info: information/metadata about each sample
data(varPartData)

# Specify variables to consider
# Age is continuous so we model it as a fixed effect
# Individual and Tissue are both categorical, so we model them as random effects
form <- ~ Age + (1|Individual) + (1|Tissue) 

varPart <- fitExtractVarPartModel( geneExpr, form, info )
 
# violin plot of contribution of each variable to total variance
plotVarPart( sortCols( varPart ) )

# stop cluster
stopCluster(cl)

}

